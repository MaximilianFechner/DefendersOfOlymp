Index: .idea/.idea.DefendersOfOlymp/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f5c2b25d-1da6-43e0-9be8-ccd5b961fa75\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/Assets/02_Scripts/System.meta\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Jens\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Zarbony&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/MaximilianFechner/DefendersOfOlymp.git&quot;,\r\n    &quot;accountId&quot;: &quot;999b7a2b-8de6-463f-920e-da371d9c1f2e&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"mock://F:/OneDrive - games-academy.de/GitFork/DefendersOfOlymp/Assets/TextMesh Pro/Examples &amp; Extras/Resources/Fonts &amp; Materials/Bangers SDF.asset\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MetaFilesCheckinStateConfiguration\" checkMetaFiles=\"true\" />\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2p4YRC8D7zsFKUIL4UhR6d1csBs\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"Elija\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"configurable.group.language\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Attach to Unity Editor.Attach to Unity Editor\">\r\n    <configuration name=\"Start Unity\" type=\"RunUnityExe\" factoryName=\"Unity Executable\">\r\n      <option name=\"EXE_PATH\" value=\"F:\\Unity\\6000.0.25f1\\Editor\\Unity.exe\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"-projectPath &quot;F:\\OneDrive - games-academy.de\\GitFork\\DefendersOfOlymp&quot; -debugCodeOptimization\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"F:\\OneDrive - games-academy.de\\GitFork\\DefendersOfOlymp\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Unit Tests (batch mode)\" type=\"RunUnityExe\" factoryName=\"Unity Executable\">\r\n      <option name=\"EXE_PATH\" value=\"F:\\Unity\\6000.0.25f1\\Editor\\Unity.exe\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"-runTests -batchmode -projectPath &quot;F:\\OneDrive - games-academy.de\\GitFork\\DefendersOfOlymp&quot; -testResults Logs/results.xml -logFile Logs/Editor.log -testPlatform EditMode -debugCodeOptimization\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"F:\\OneDrive - games-academy.de\\GitFork\\DefendersOfOlymp\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Attach to Unity Editor &amp; Play\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"UNITY_ATTACH_AND_PLAY\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Attach to Unity Editor\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"Unity Debug\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\Jens\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f5c2b25d-1da6-43e0-9be8-ccd5b961fa75\" name=\"Changes\" comment=\"\" />\r\n      <created>1699011252969</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699011252969</updated>\r\n      <workItem from=\"1732026804420\" duration=\"2035000\" />\r\n      <workItem from=\"1732095528538\" duration=\"1579000\" />\r\n      <workItem from=\"1732097582203\" duration=\"4057000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"+ Default Stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732026951897</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732026951897</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"+ Scene&#10;+ IDE Stuff&#10;+ meta...\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732109074748</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732109074748</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"true\" />\r\n  <component name=\"UnityProjectDiscoverer\">\r\n    <option name=\"hasUnityReference\" value=\"true\" />\r\n    <option name=\"unityProject\" value=\"true\" />\r\n    <option name=\"unityProjectFolder\" value=\"true\" />\r\n  </component>\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"Both\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Jens\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"+ Default Stuff\" />\r\n    <MESSAGE value=\"+ Scene&#10;+ IDE Stuff&#10;+ meta...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"+ Scene&#10;+ IDE Stuff&#10;+ meta...\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.DefendersOfOlymp/.idea/workspace.xml b/.idea/.idea.DefendersOfOlymp/.idea/workspace.xml
--- a/.idea/.idea.DefendersOfOlymp/.idea/workspace.xml	(revision c50b95123f9de723a9139132859ad23e856b72a5)
+++ b/.idea/.idea.DefendersOfOlymp/.idea/workspace.xml	(date 1738244864963)
@@ -15,7 +15,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="Jens" />
+        <entry key="$PROJECT_DIR$" value="fix/main_menu" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -44,20 +44,28 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "Elija",
-    "ignore.virus.scanning.warn.message": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "configurable.group.language",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Elija&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.language&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected="Attach to Unity Editor.Attach to Unity Editor">
+    <configuration name="Standalone Player" type="RunUnityExe" factoryName="Unity Executable">
+      <option name="EXE_PATH" value="$PROJECT_DIR$/TestBuild\DefendersOfOlymp.exe" />
+      <option name="PROGRAM_PARAMETERS" value="" />
+      <option name="WORKING_DIRECTORY" value="F:\OneDrive - games-academy.de\GitFork\DefendersOfOlymp\TestBuild" />
+      <option name="PASS_PARENT_ENVS" value="1" />
+      <option name="USE_EXTERNAL_CONSOLE" value="0" />
+      <method v="2" />
+    </configuration>
     <configuration name="Start Unity" type="RunUnityExe" factoryName="Unity Executable">
       <option name="EXE_PATH" value="F:\Unity\6000.0.25f1\Editor\Unity.exe" />
       <option name="PROGRAM_PARAMETERS" value="-projectPath &quot;F:\OneDrive - games-academy.de\GitFork\DefendersOfOlymp&quot; -debugCodeOptimization" />
@@ -79,6 +87,9 @@
       <option name="listenPortForConnections" value="false" />
       <option name="pid" />
       <option name="projectPathOnTarget" />
+      <option name="runtimes">
+        <list />
+      </option>
       <option name="selectedOptions">
         <list />
       </option>
@@ -89,6 +100,9 @@
       <option name="listenPortForConnections" value="false" />
       <option name="pid" />
       <option name="projectPathOnTarget" />
+      <option name="runtimes">
+        <list />
+      </option>
       <option name="selectedOptions">
         <list />
       </option>
Index: Assets/02_Scripts/MainMenu/Manual_CardManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Assets/02_Scripts/MainMenu/Manual_CardManager.cs b/Assets/02_Scripts/MainMenu/ManualCardManager.cs
rename from Assets/02_Scripts/MainMenu/Manual_CardManager.cs
rename to Assets/02_Scripts/MainMenu/ManualCardManager.cs
--- a/Assets/02_Scripts/MainMenu/Manual_CardManager.cs	(revision c50b95123f9de723a9139132859ad23e856b72a5)
+++ b/Assets/02_Scripts/MainMenu/ManualCardManager.cs	(date 1738244864923)
@@ -1,58 +1,57 @@
 using System.Collections.Generic;
 using UnityEngine.EventSystems;
 using UnityEngine;
-
-using System.Collections;
-using System.Collections.Generic;
-using Unity.VisualScripting;
-using UnityEngine;
-using UnityEngine.EventSystems;
 using UnityEngine.UI;
 
-public class Manual_CardManager : MonoBehaviour
+public class ManualCardManager : MonoBehaviour
 {
-    [SerializeField]
-    private List<Cards> _AvailableCards;
+    [SerializeField] private List<Cards> _availableCards;
     private Cards _currentCard;
 
     [Header("UI Elements")]
-    public Image _CardDisplay;
-    public Button _drawCardButton;
+    [SerializeField] private Image _cardDisplay;
+    [SerializeField] private Button _drawCardButton;
 
-    public GameObject _towerPreview;
-    private GameObject _currentPreview;
+    [SerializeField] private GameObject _towerPreview;
+    [SerializeField] private GameObject _currentPreview;
 
     private void Update()
     {
         if (_currentPreview != null)
         {
             Vector3 mousePosition = Input.mousePosition;
-            Vector3 worldPosition = Camera.main.ScreenToWorldPoint(new Vector3(mousePosition.x, mousePosition.y, Camera.main.nearClipPlane));
-            worldPosition.z = 0;
-            _currentPreview.transform.position = worldPosition;
+            if (Camera.main != null)
+            {
+                Vector3 worldPosition = Camera.main.ScreenToWorldPoint(new Vector3(mousePosition.x, mousePosition.y, Camera.main.nearClipPlane));
+                worldPosition.z = 0;
+                _currentPreview.transform.position = worldPosition;
+            }
         }
 
 
         if (Input.GetMouseButtonDown(0))
         {
-            if (_GetCurrentCard() != null)
+            if (GetCurrentCard() != null)
             {
                 if (EventSystem.current.IsPointerOverGameObject()) return;
-                _PlaceTower();
+                PlaceTower();
             }
         }
 
         if (Input.GetMouseButtonDown(1))
         {
-            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
-            RaycastHit2D hit = Physics2D.Raycast(ray.origin, ray.direction, Mathf.Infinity);
-            if (hit.collider != null)
-            {
-                GameObject tower = hit.collider.gameObject;
-                if (tower.tag.Equals("Tower"))
-                {
-                    BaseTower baseTower = tower.GetComponent<BaseTower>();
-                    baseTower.SetTowerMenu();
+            if (Camera.main != null)
+            {
+                Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
+                RaycastHit2D hit = Physics2D.Raycast(ray.origin, ray.direction, Mathf.Infinity);
+                if (hit.collider != null)
+                {
+                    GameObject tower = hit.collider.gameObject;
+                    if (tower.tag.Equals("Tower"))
+                    {
+                        BaseTower baseTower = tower.GetComponent<BaseTower>();
+                        baseTower.SetTowerMenu();
+                    }
                 }
             }
         }
@@ -60,41 +59,41 @@
 
     public void DrawCard()
     {
-        if (_AvailableCards.Count == 0) return;
+        if (_availableCards.Count == 0) return;
 
-        int randomIndex = Random.Range(0, _AvailableCards.Count);
-        _currentCard = _AvailableCards[randomIndex];
-        _CardDisplay.sprite = _currentCard.CardSprite;
-        _CardDisplay.gameObject.SetActive(true);
+        int randomIndex = Random.Range(0, _availableCards.Count);
+        _currentCard = _availableCards[randomIndex];
+        _cardDisplay.sprite = _currentCard.CardSprite;
+        _cardDisplay.gameObject.SetActive(true);
         _drawCardButton.gameObject.SetActive(false);
         //UIManager.Instance.waveFinPanel.SetActive(false);
 
-        Cards previewTower = _GetCurrentCard();
-        _PlacementPreview(previewTower);
+        Cards previewTower = GetCurrentCard();
+        PlacementPreview(previewTower);
 
         //if (!UIManager.Instance.prepareFirstWavePanel) return;
         //UIManager.Instance.prepareFirstWavePanel.SetActive(false);
         //_drawCardButton.interactable = false;
     }
 
-    public Cards _GetCurrentCard()
+    public Cards GetCurrentCard()
     {
         return _currentCard;
     }
 
-    public void _ClearCard()
+    public void ClearCard()
     {
         _currentCard = null;
-        _CardDisplay.gameObject.SetActive(false);
+        _cardDisplay.gameObject.SetActive(false);
     }
 
 
-    private void _PlaceTower()
+    private void PlaceTower()
     {
         Vector3 mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
         mousePosition.z = 0; // Z-Achse auf 0 setzen f�r 2D
 
-        Cards selectedCard = _GetCurrentCard();
+        Cards selectedCard = GetCurrentCard();
         Instantiate(selectedCard.TowerPrefab, mousePosition, Quaternion.identity);
 
         if (_currentPreview != null)
@@ -103,11 +102,11 @@
             _currentPreview = null;
         }
 
-        _ClearCard();
+        ClearCard();
         GameManager.Instance.StartNextWave();
     }
 
-    private void _PlacementPreview(Cards currentCard)
+    private void PlacementPreview(Cards currentCard)
     {
         if (currentCard == null) return;
 
diff --git a/Assets/02_Scripts/MainMenu/Manual_CardManager.cs.meta b/Assets/02_Scripts/MainMenu/ManualCardManager.cs.meta
rename from Assets/02_Scripts/MainMenu/Manual_CardManager.cs.meta
rename to Assets/02_Scripts/MainMenu/ManualCardManager.cs.meta
